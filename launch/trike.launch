<!--

The launch file is an XML that specifies which parameters to set and ROS
nodes to launch. It's used with a roslaunch command, which is responsible
for doing the initial setup and starting the system. The launch file includes
options to automatically respawn processes that have already died. This
file is usually in the /launch subdirectory of a package. For a specification
of this XML format, see:
http://wiki.ros.org/roslaunch/XML

-->

<launch>
    <group ns="ema">

        <!-- declare and load launch arguments-->
        <arg name="platform" value="rasp" doc="specify which platform to use: rasp/pc"/>
        <param name="platform" value="$(arg platform)"/>
        <arg name="display_type" value="lcd" doc="specify display type connected: lcd/oled"/>
        <param name="display_type" value="$(arg display_type)"/>
        <arg name="log_config" value="off" doc="specify rosbag configurations: off/critical/all"/>
        <param name="log_config" value="$(arg log_config)"/>
        
        <!-- load common config files-->
        <rosparam command="load" file="$(find yostlabs_3space_imu)/config/imu.yaml" ns="imu"/>
        <rosparam command="load" file="$(find hasomed_rehastim_stimulator)/config/CCL18F48.yaml" ns="stimulator"/>
        <rosparam command="load" file="$(find ema_fes_cycling)/config/trike.yaml" ns="trike"/>

        <!-- launch common nodes -->
        <node name="imu" pkg="yostlabs_3space_imu" type="imu_node.py" output="log" respawn="true" respawn_delay="5"/>
        <node name="stimulator" pkg="hasomed_rehastim_stimulator" type="stimulator_node.py" output="log" respawn="true" respawn_delay="5"/>
        <node name="trike" pkg="ema_fes_cycling" type="trike_node.py" output="screen" respawn="true" respawn_delay="5"/>

        <!-- launch pc-exclusive nodes and load config files-->
        <group if="$(eval platform == 'pc')">
            <rosparam command="load" file="$(find ema_fes_cycling)/config/automated_pc.yaml" ns="trike"/>
            <node name="trike_config" pkg="ema_fes_cycling" type="trike_server_node.py" output="log" respawn="true" respawn_delay="5"/>
            <node name="dashboard" pkg="rqt_gui" type="rqt_gui" output="log" args="--perspective-file $(find ema_fes_cycling)/perspective/EMA_Trike_Cadence.perspective"/>
        </group>

        <!-- launch rasp-exclusive nodes and load config files-->
        <group if="$(eval platform == 'rasp')">
            <rosparam command="load" file="$(find ema_fes_cycling)/config/automated_rasp.yaml" ns="trike"/>
            <node name="interface" pkg="ema_fes_cycling" type="interface_node.py" output="screen" respawn="true" respawn_delay="5"/>
            <node name="button" pkg="ema_fes_cycling" type="button_node.py" output="screen" respawn="true" respawn_delay="5"/>

            <!-- launch lcd-exclusive node -->
            <group if="$(eval display_type == 'lcd')">
                <node name="display" pkg="ema_fes_cycling" type="display_node.py" output="screen" respawn="true" respawn_delay="5"/>
            </group>

            <!-- launch oled-exclusive node -->
            <group if="$(eval display_type == 'oled')">
                <node name="display" pkg="ema_fes_cycling" type="display_node.py" output="screen" respawn="true" respawn_delay="5"/>
            </group>
        </group>

        <!-- launch log-settings (rosbag) -->
        <!-- Setting = OFF (no log) -->
        <group if="$(eval log_config == 'off')">
        </group>

        <!-- Setting = critical - record speed,cadence,distance,stimsignal,ccl_update -->
        <group if="$(eval log_config == 'critical')">
            <node name="logger" pkg="rosbag" type="record" respawn="true" respawn_delay="5" args="/ema/trike/angle /ema/trike/speed /ema/trike/cadence /ema/trike/distance
                /ema/stimulator/current /ema/stimulator/pulse_width -o $(env HOME)/bagfiles/ema_fes_cycling/ --split --max-splits 12 --duration 5m"/>
        </group>

        <!-- Setting = all - record all topics -->
        <group if="$(eval log_config == 'all')">
            <node name="logger" pkg="rosbag" type="record" respawn="true" respawn_delay="5" args=" -a -o $(env HOME)/bagfiles/ema_fes_cycling/ --split --duration 5m"/>
        </group>

    </group>
</launch>
