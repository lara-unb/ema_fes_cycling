#!/usr/bin/env python
PACKAGE = "ema_fes_cycling"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# mygroup = gen.add_group("MyGroup", type="tab")  # types: 'hide', 'collapse', 'apply', 'tab'
# config['groups']['groups']['MyGroup']['state'] = False

gen.add("Q_Enable",			bool_t,	0, "Enables quadriceps stimulation",	False)
gen.add("H_Enable",			bool_t,	0, "Enables hamstrings stimulation",	False)
gen.add("G_Enable",			bool_t,	0, "Enables gluteal stimulation",		False)
gen.add("Shift",					int_t,	0, "Shift for velocity",	35,	0,	100)

quad_config = gen.add_group("Quadriceps_CH1/2",	type="hide")
quad_config.add("Q_Link_Current",		bool_t, 0, "Modifies both current values at the same time", True)
quad_config.add("Q_Current_Left",		int_t,  0, "Stimulator current on the left leg",	2,	0,	80)
quad_config.add("Q_Current_Right",		int_t,  0, "Stimulator current on the right leg",	2,	0,	80)

quad_config.add("Q_Link_Angle",			bool_t, 0, "Mirrors the angle interval to the opposite leg", True)
quad_config.add("Q_Angle_Left_Min",		int_t,  0, "Start stimulation angle for the left leg",	300,	0,	360)
quad_config.add("Q_Angle_Left_Max",		int_t,	0, "End stimulation angle for the left leg",	40,		0,	360)
quad_config.add("Q_Angle_Right_Min",	int_t,  0, "Start stimulation angle for the right leg",	120,	0,	360)
quad_config.add("Q_Angle_Right_Max",	int_t,  0, "End stimulation angle for the right leg",	220,	0,	360)

hams_config = gen.add_group("Hamstrings_CH3/4",	type="hide")
hams_config.add("H_Link_Current",		bool_t, 0, "Modifies both current values at the same time", True)
hams_config.add("H_Current_Left",		int_t,  0, "Stimulator current on the left leg",	2,	0,	80)
hams_config.add("H_Current_Right",		int_t,  0, "Stimulator current on the right leg",	2,	0,	80)

hams_config.add("H_Link_Angle",			bool_t, 0, "Mirrors the angle interval to the opposite leg", True)
hams_config.add("H_Angle_Left_Min",		int_t,  0, "Start stimulation angle for the left leg",	30,		0,	360)
hams_config.add("H_Angle_Left_Max",		int_t,	0, "End stimulation angle for the left leg",	105,	0,	360)
hams_config.add("H_Angle_Right_Min",	int_t,  0, "Start stimulation angle for the right leg",	210,	0,	360)
hams_config.add("H_Angle_Right_Max",	int_t,  0, "End stimulation angle for the right leg",	285,	0,	360)

glut_config = gen.add_group("Gluteal_CH5/6",	type="hide")
glut_config.add("G_Link_Current",		bool_t, 0, "Modifies both current values at the same time", True)
glut_config.add("G_Current_Left",		int_t,  0, "Stimulator current on the left leg",	2,	0,	80)
glut_config.add("G_Current_Right",		int_t,  0, "Stimulator current on the right leg",	2,	0,	80)

glut_config.add("G_Link_Angle",			bool_t, 0, "Mirrors the angle interval to the opposite leg", True)
glut_config.add("G_Angle_Left_Min",		int_t,  0, "Start stimulation angle for the left leg",	70,		0,	360)
glut_config.add("G_Angle_Left_Max",		int_t,	0, "End stimulation angle for the left leg",	170,	0,	360)
glut_config.add("G_Angle_Right_Min",	int_t,  0, "Start stimulation angle for the right leg",	250,	0,	360)
glut_config.add("G_Angle_Right_Max",	int_t,  0, "End stimulation angle for the right leg",	350,	0,	360)

exit(gen.generate(PACKAGE, "server", "DynamicParams"))

