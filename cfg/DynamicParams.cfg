#!/usr/bin/env python
#
# Template:
# mygroup = gen.add_group("MyGroup", type="tab")  # types: 'hide', 'collapse', 'apply', 'tab'
#
# Dont change group names! they're used by other pieces of code (eg. "Ch12" should remain the same)
#
# Ch12: commonly used with quadriceps, refers to stimulator channels 1 and 2
# Ch34: commonly used with hamstrings, refers to stimulator channels 3 and 4
# Ch56: commonly used with gluteal, refers to stimulator channels 5 and 6
# Ch78: commonly not used, refers to stimulator channels 7 and 8
# Odd:	commonly used with left side, refers to the odd channel number (1,3,5,7)
# Even:	commonly used with right side, refers to the even channel number (2,4,6,8)

PACKAGE = "ema_fes_cycling"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Ch12_Enable",		bool_t,	0, "Enables channel 1 and 2 stimulation",		False)
gen.add("Ch34_Enable",		bool_t,	0, "Enables channel 3 and 4 stimulation",		False)
gen.add("Ch56_Enable",		bool_t,	0, "Enables channel 5 and 6 stimulation",		False)
gen.add("Ch78_Enable",		bool_t,	0, "Enables channel 7 and 8 stimulation",		False)
gen.add("Shift",			int_t,	0, "Shift for velocity",	35,	0,	100)
gen.add("Mark_assistance",	bool_t,	0, "Mark when assistance is needed",	False)
gen.add("AutoC_Enable",		bool_t,	0, "Enables the simple current control",	False)
gen.add("AutoC_Shift",		int_t,	0, "Max shift for current",	10,	0,	80)
gen.add("AutoC_Velocity",	int_t,	0, "Increase current if velocity is lower",	48,	0,	150)

Ch12_config = gen.add_group("Ch12",	type="hide")
Ch12_config.add("Ch12_Link_Current",		bool_t, 0, "Modifies both current values at the same time", True)
Ch12_config.add("Ch12_Current_Odd",			int_t,  0, "Stimulator current for the odd channel",		0,	0,	110)
Ch12_config.add("Ch12_Current_Even",		int_t,  0, "Stimulator current for the even channel",		0,	0,	110)
Ch12_config.add("Ch12_Pulse_Width_Odd",		int_t,  0, "Stimulator pulse width for the odd channel",	500,	0,	500)
Ch12_config.add("Ch12_Pulse_Width_Even",	int_t,  0, "Stimulator pulse width for the even channel",	500,	0,	500)

Ch12_config.add("Ch12_Link_Angle",			bool_t, 0, "Mirrors the angle interval to the opposite leg", True)
Ch12_config.add("Ch12_Angle_Odd_Min",		int_t,  0, "Start stimulatifor angle for the odd channel",	280,	0,	360)
Ch12_config.add("Ch12_Angle_Odd_Max",		int_t,	0, "End stimulatifor angle for the odd channel",	0,		0,	360)
Ch12_config.add("Ch12_Angle_Even_Min",		int_t,  0, "Start stimulatifor angle for the even channel",	100,	0,	360)
Ch12_config.add("Ch12_Angle_Even_Max",		int_t,  0, "End stimulatifor angle for the even channel",	180,	0,	360)

Ch34_config = gen.add_group("Ch34",	type="hide")
Ch34_config.add("Ch34_Link_Current",		bool_t, 0, "Modifies both current values at the same time", True)
Ch34_config.add("Ch34_Current_Odd",			int_t,  0, "Stimulator current for the odd channel",		0,	0,	110)
Ch34_config.add("Ch34_Current_Even",		int_t,  0, "Stimulator current for the even channel",		0,	0,	110)
Ch34_config.add("Ch34_Pulse_Width_Odd",		int_t,  0, "Stimulator pulse width for the odd channel",	500,	0,	500)
Ch34_config.add("Ch34_Pulse_Width_Even",	int_t,  0, "Stimulator pulse width for the even channel",	500,	0,	500)

Ch34_config.add("Ch34_Link_Angle",			bool_t, 0, "Mirrors the angle interval to the opposite leg", True)
Ch34_config.add("Ch34_Angle_Odd_Min",		int_t,  0, "Start stimulatifor angle for the odd channel",	30,		0,	360)
Ch34_config.add("Ch34_Angle_Odd_Max",		int_t,	0, "End stimulatifor angle for the odd channel",	105,	0,	360)
Ch34_config.add("Ch34_Angle_Even_Min",		int_t,  0, "Start stimulatifor angle for the even channel",	210,	0,	360)
Ch34_config.add("Ch34_Angle_Even_Max",		int_t,  0, "End stimulatifor angle for the even channel",	285,	0,	360)

Ch56_config = gen.add_group("Ch56",	type="hide")
Ch56_config.add("Ch56_Link_Current",		bool_t, 0, "Modifies both current values at the same time", True)
Ch56_config.add("Ch56_Current_Odd",			int_t,  0, "Stimulator current for the odd channel",		0,	0,	110)
Ch56_config.add("Ch56_Current_Even",		int_t,  0, "Stimulator current for the even channel",		0,	0,	110)
Ch56_config.add("Ch56_Pulse_Width_Odd",		int_t,  0, "Stimulator pulse width for the odd channel",	500,	0,	500)
Ch56_config.add("Ch56_Pulse_Width_Even",	int_t,  0, "Stimulator pulse width for the even channel",	500,	0,	500)

Ch56_config.add("Ch56_Link_Angle",			bool_t, 0, "Mirrors the angle interval to the opposite leg", True)
Ch56_config.add("Ch56_Angle_Odd_Min",		int_t,  0, "Start stimulatifor angle for the odd channel",	70,		0,	360)
Ch56_config.add("Ch56_Angle_Odd_Max",		int_t,	0, "End stimulatifor angle for the odd channel",	170,	0,	360)
Ch56_config.add("Ch56_Angle_Even_Min",		int_t,  0, "Start stimulatifor angle for the even channel",	250,	0,	360)
Ch56_config.add("Ch56_Angle_Even_Max",		int_t,  0, "End stimulatifor angle for the even channel",	350,	0,	360)

Ch78_config = gen.add_group("Ch78",	type="hide")
Ch78_config.add("Ch78_Link_Current",		bool_t, 0, "Modifies both current values at the same time", True)
Ch78_config.add("Ch78_Current_Odd",			int_t,  0, "Stimulator current for the odd channel",		0,	0,	110)
Ch78_config.add("Ch78_Current_Even",		int_t,  0, "Stimulator current for the even channel",		0,	0,	110)
Ch78_config.add("Ch78_Pulse_Width_Odd",		int_t,  0, "Stimulator pulse width for the odd channel",	500,	0,	500)
Ch78_config.add("Ch78_Pulse_Width_Even",	int_t,  0, "Stimulator pulse width for the even channel",	500,	0,	500)

Ch78_config.add("Ch78_Link_Angle",			bool_t, 0, "Mirrors the angle interval to the opposite leg", True)
Ch78_config.add("Ch78_Angle_Odd_Min",		int_t,  0, "Start stimulatifor angle for the odd channel",	0,	0,	360)
Ch78_config.add("Ch78_Angle_Odd_Max",		int_t,	0, "End stimulatifor angle for the odd channel",	0,	0,	360)
Ch78_config.add("Ch78_Angle_Even_Min",		int_t,  0, "Start stimulatifor angle for the even channel",	0,	0,	360)
Ch78_config.add("Ch78_Angle_Even_Max",		int_t,  0, "End stimulatifor angle for the even channel",	0,	0,	360)

exit(gen.generate(PACKAGE, "server", "DynamicParams"))

